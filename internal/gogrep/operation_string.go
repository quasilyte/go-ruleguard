// Code generated by "stringer -type=operation -trimprefix=op"; DO NOT EDIT.

package gogrep

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[opInvalid-0]
	_ = x[opNode-1]
	_ = x[opNamedNode-2]
	_ = x[opNodeSeq-3]
	_ = x[opNamedNodeSeq-4]
	_ = x[opOptNode-5]
	_ = x[opNamedOptNode-6]
	_ = x[opMultiStmt-7]
	_ = x[opMultiExpr-8]
	_ = x[opEnd-9]
	_ = x[opBasicLit-10]
	_ = x[opStrictIntLit-11]
	_ = x[opStrictFloatLit-12]
	_ = x[opStrictCharLit-13]
	_ = x[opStrictStringLit-14]
	_ = x[opStrictComplexLit-15]
	_ = x[opIdent-16]
	_ = x[opIndexExpr-17]
	_ = x[opSliceExpr-18]
	_ = x[opSliceFromExpr-19]
	_ = x[opSliceToExpr-20]
	_ = x[opSliceFromToExpr-21]
	_ = x[opSliceToCapExpr-22]
	_ = x[opSliceFromToCapExpr-23]
	_ = x[opFuncLit-24]
	_ = x[opCompositeLit-25]
	_ = x[opTypedCompositeLit-26]
	_ = x[opSimpleSelectorExpr-27]
	_ = x[opSelectorExpr-28]
	_ = x[opTypeAssertExpr-29]
	_ = x[opTypeSwitchAssertExpr-30]
	_ = x[opVoidFuncType-31]
	_ = x[opFuncType-32]
	_ = x[opArrayType-33]
	_ = x[opSliceType-34]
	_ = x[opMapType-35]
	_ = x[opChanType-36]
	_ = x[opKeyValueExpr-37]
	_ = x[opEllipsis-38]
	_ = x[opTypedEllipsis-39]
	_ = x[opStarExpr-40]
	_ = x[opUnaryExpr-41]
	_ = x[opBinaryExpr-42]
	_ = x[opParenExpr-43]
	_ = x[opVariadicCallExpr-44]
	_ = x[opNonVariadicCallExpr-45]
	_ = x[opCallExpr-46]
	_ = x[opAssignStmt-47]
	_ = x[opMultiAssignStmt-48]
	_ = x[opBranchStmt-49]
	_ = x[opSimpleLabeledBranchStmt-50]
	_ = x[opLabeledBranchStmt-51]
	_ = x[opSimpleLabeledStmt-52]
	_ = x[opLabeledStmt-53]
	_ = x[opBlockStmt-54]
	_ = x[opExprStmt-55]
	_ = x[opGoStmt-56]
	_ = x[opDeferStmt-57]
	_ = x[opSendStmt-58]
	_ = x[opEmptyStmt-59]
	_ = x[opIncDecStmt-60]
	_ = x[opReturnStmt-61]
	_ = x[opIfStmt-62]
	_ = x[opIfInitStmt-63]
	_ = x[opIfElseStmt-64]
	_ = x[opIfInitElseStmt-65]
	_ = x[opIfNamedOptStmt-66]
	_ = x[opIfNamedOptElseStmt-67]
	_ = x[opSwitchStmt-68]
	_ = x[opSwitchTagStmt-69]
	_ = x[opSwitchInitStmt-70]
	_ = x[opSwitchInitTagStmt-71]
	_ = x[opSelectStmt-72]
	_ = x[opTypeSwitchStmt-73]
	_ = x[opTypeSwitchInitStmt-74]
	_ = x[opCaseClause-75]
	_ = x[opDefaultCaseClause-76]
	_ = x[opCommClause-77]
	_ = x[opDefaultCommClause-78]
	_ = x[opForStmt-79]
	_ = x[opForPostStmt-80]
	_ = x[opForCondStmt-81]
	_ = x[opForCondPostStmt-82]
	_ = x[opForInitStmt-83]
	_ = x[opForInitPostStmt-84]
	_ = x[opForInitCondStmt-85]
	_ = x[opForInitCondPostStmt-86]
	_ = x[opRangeStmt-87]
	_ = x[opRangeKeyStmt-88]
	_ = x[opRangeKeyValueStmt-89]
	_ = x[opFieldList-90]
	_ = x[opUnnamedField-91]
	_ = x[opSimpleField-92]
	_ = x[opField-93]
	_ = x[opMultiField-94]
	_ = x[opValueInitSpec-95]
	_ = x[opTypedValueInitSpec-96]
	_ = x[opTypedValueSpec-97]
	_ = x[opTypeSpec-98]
	_ = x[opTypeAliasSpec-99]
	_ = x[opFuncDecl-100]
	_ = x[opMethodDecl-101]
	_ = x[opFuncProtoDecl-102]
	_ = x[opMethodProtoDecl-103]
	_ = x[opConstDecl-104]
	_ = x[opVarDecl-105]
	_ = x[opTypeDecl-106]
	_ = x[opEmptyPackage-107]
}

const _operation_name = "InvalidNodeNamedNodeNodeSeqNamedNodeSeqOptNodeNamedOptNodeMultiStmtMultiExprEndBasicLitStrictIntLitStrictFloatLitStrictCharLitStrictStringLitStrictComplexLitIdentIndexExprSliceExprSliceFromExprSliceToExprSliceFromToExprSliceToCapExprSliceFromToCapExprFuncLitCompositeLitTypedCompositeLitSimpleSelectorExprSelectorExprTypeAssertExprTypeSwitchAssertExprVoidFuncTypeFuncTypeArrayTypeSliceTypeMapTypeChanTypeKeyValueExprEllipsisTypedEllipsisStarExprUnaryExprBinaryExprParenExprVariadicCallExprNonVariadicCallExprCallExprAssignStmtMultiAssignStmtBranchStmtSimpleLabeledBranchStmtLabeledBranchStmtSimpleLabeledStmtLabeledStmtBlockStmtExprStmtGoStmtDeferStmtSendStmtEmptyStmtIncDecStmtReturnStmtIfStmtIfInitStmtIfElseStmtIfInitElseStmtIfNamedOptStmtIfNamedOptElseStmtSwitchStmtSwitchTagStmtSwitchInitStmtSwitchInitTagStmtSelectStmtTypeSwitchStmtTypeSwitchInitStmtCaseClauseDefaultCaseClauseCommClauseDefaultCommClauseForStmtForPostStmtForCondStmtForCondPostStmtForInitStmtForInitPostStmtForInitCondStmtForInitCondPostStmtRangeStmtRangeKeyStmtRangeKeyValueStmtFieldListUnnamedFieldSimpleFieldFieldMultiFieldValueInitSpecTypedValueInitSpecTypedValueSpecTypeSpecTypeAliasSpecFuncDeclMethodDeclFuncProtoDeclMethodProtoDeclConstDeclVarDeclTypeDeclEmptyPackage"

var _operation_index = [...]uint16{0, 7, 11, 20, 27, 39, 46, 58, 67, 76, 79, 87, 99, 113, 126, 141, 157, 162, 171, 180, 193, 204, 219, 233, 251, 258, 270, 287, 305, 317, 331, 351, 363, 371, 380, 389, 396, 404, 416, 424, 437, 445, 454, 464, 473, 489, 508, 516, 526, 541, 551, 574, 591, 608, 619, 628, 636, 642, 651, 659, 668, 678, 688, 694, 704, 714, 728, 742, 760, 770, 783, 797, 814, 824, 838, 856, 866, 883, 893, 910, 917, 928, 939, 954, 965, 980, 995, 1014, 1023, 1035, 1052, 1061, 1073, 1084, 1089, 1099, 1112, 1130, 1144, 1152, 1165, 1173, 1183, 1196, 1211, 1220, 1227, 1235, 1247}

func (i operation) String() string {
	if i >= operation(len(_operation_index)-1) {
		return "operation(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _operation_name[_operation_index[i]:_operation_index[i+1]]
}
