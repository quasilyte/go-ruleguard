// Code generated by "stringer -type=opcode -trimprefix=op"; DO NOT EDIT.

package quasigo

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[opInvalid-0]
	_ = x[opPop-1]
	_ = x[opDup-2]
	_ = x[opPushParam-3]
	_ = x[opPushLocal-4]
	_ = x[opPushFalse-5]
	_ = x[opPushTrue-6]
	_ = x[opPushConst-7]
	_ = x[opSetLocal-8]
	_ = x[opIncLocal-9]
	_ = x[opDecLocal-10]
	_ = x[opReturnTop-11]
	_ = x[opReturnFalse-12]
	_ = x[opReturnTrue-13]
	_ = x[opJump-14]
	_ = x[opJumpFalse-15]
	_ = x[opJumpTrue-16]
	_ = x[opCallBuiltin-17]
	_ = x[opIsNil-18]
	_ = x[opIsNotNil-19]
	_ = x[opNot-20]
	_ = x[opEqInt-21]
	_ = x[opNotEqInt-22]
	_ = x[opGtInt-23]
	_ = x[opGtEqInt-24]
	_ = x[opLtInt-25]
	_ = x[opLtEqInt-26]
	_ = x[opEqString-27]
	_ = x[opNotEqString-28]
	_ = x[opConcat-29]
	_ = x[opAdd-30]
	_ = x[opSub-31]
	_ = x[opStringSlice-32]
	_ = x[opStringSliceFrom-33]
	_ = x[opStringSliceTo-34]
	_ = x[opStringLen-35]
}

const _opcode_name = "InvalidPopDupPushParamPushLocalPushFalsePushTruePushConstSetLocalIncLocalDecLocalReturnTopReturnFalseReturnTrueJumpJumpFalseJumpTrueCallBuiltinIsNilIsNotNilNotEqIntNotEqIntGtIntGtEqIntLtIntLtEqIntEqStringNotEqStringConcatAddSubStringSliceStringSliceFromStringSliceToStringLen"

var _opcode_index = [...]uint16{0, 7, 10, 13, 22, 31, 40, 48, 57, 65, 73, 81, 90, 101, 111, 115, 124, 132, 143, 148, 156, 159, 164, 172, 177, 184, 189, 196, 204, 215, 221, 224, 227, 238, 253, 266, 275}

func (i opcode) String() string {
	if i >= opcode(len(_opcode_index)-1) {
		return "opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _opcode_name[_opcode_index[i]:_opcode_index[i+1]]
}
