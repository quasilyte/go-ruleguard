// Code generated by "stringer -type=opcode -trimprefix=op"; DO NOT EDIT.

package quasigo

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[opInvalid-0]
	_ = x[opPop-1]
	_ = x[opDup-2]
	_ = x[opPushParam-3]
	_ = x[opPushIntParam-4]
	_ = x[opPushLocal-5]
	_ = x[opPushIntLocal-6]
	_ = x[opPushFalse-7]
	_ = x[opPushTrue-8]
	_ = x[opPushConst-9]
	_ = x[opPushIntConst-10]
	_ = x[opSetLocal-11]
	_ = x[opSetIntLocal-12]
	_ = x[opIncLocal-13]
	_ = x[opDecLocal-14]
	_ = x[opReturnTop-15]
	_ = x[opReturnIntTop-16]
	_ = x[opReturnFalse-17]
	_ = x[opReturnTrue-18]
	_ = x[opReturn-19]
	_ = x[opJump-20]
	_ = x[opJumpFalse-21]
	_ = x[opJumpTrue-22]
	_ = x[opCallNative-23]
	_ = x[opIsNil-24]
	_ = x[opIsNotNil-25]
	_ = x[opNot-26]
	_ = x[opEqInt-27]
	_ = x[opNotEqInt-28]
	_ = x[opGtInt-29]
	_ = x[opGtEqInt-30]
	_ = x[opLtInt-31]
	_ = x[opLtEqInt-32]
	_ = x[opEqString-33]
	_ = x[opNotEqString-34]
	_ = x[opConcat-35]
	_ = x[opAdd-36]
	_ = x[opSub-37]
	_ = x[opStringSlice-38]
	_ = x[opStringSliceFrom-39]
	_ = x[opStringSliceTo-40]
	_ = x[opStringLen-41]
}

const _opcode_name = "InvalidPopDupPushParamPushIntParamPushLocalPushIntLocalPushFalsePushTruePushConstPushIntConstSetLocalSetIntLocalIncLocalDecLocalReturnTopReturnIntTopReturnFalseReturnTrueReturnJumpJumpFalseJumpTrueCallNativeIsNilIsNotNilNotEqIntNotEqIntGtIntGtEqIntLtIntLtEqIntEqStringNotEqStringConcatAddSubStringSliceStringSliceFromStringSliceToStringLen"

var _opcode_index = [...]uint16{0, 7, 10, 13, 22, 34, 43, 55, 64, 72, 81, 93, 101, 112, 120, 128, 137, 149, 160, 170, 176, 180, 189, 197, 207, 212, 220, 223, 228, 236, 241, 248, 253, 260, 268, 279, 285, 288, 291, 302, 317, 330, 339}

func (i opcode) String() string {
	if i >= opcode(len(_opcode_index)-1) {
		return "opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _opcode_name[_opcode_index[i]:_opcode_index[i+1]]
}
